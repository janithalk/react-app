{"ast":null,"code":"import _defineProperty from \"E:\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"E:\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\react-app\\\\src\\\\App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Fragment } from 'react';\nimport './App.css';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { green } from '@material-ui/core/colors';\nimport Button from '@material-ui/core/Button';\nimport Fab from '@material-ui/core/Fab'; // import CheckIcon from '@material-ui/icons/Check';\n\nimport SaveIcon from '@material-ui/icons/Save';\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200\n  },\n  dense: {\n    marginTop: 19\n  },\n  menu: {\n    width: 200\n  },\n  root: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  wrapper: {\n    margin: theme.spacing(1),\n    position: 'relative'\n  },\n  buttonSuccess: {\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700]\n    }\n  },\n  fabProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: -6,\n    left: -6,\n    zIndex: 1\n  },\n  buttonProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12\n  }\n}));\n\nfunction App() {\n  const classes = useStyles();\n\n  const _React$useState = React.useState({\n    name: 'Cat in the Hat',\n    age: '',\n    multiline: 'Controlled',\n    currency: 'EUR'\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        values = _React$useState2[0],\n        setValues = _React$useState2[1];\n\n  const handleChange = name => event => {\n    setValues(_objectSpread({}, values, {\n      [name]: event.target.value\n    }));\n  };\n\n  const _React$useState3 = React.useState(false),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        loading = _React$useState4[0],\n        setLoading = _React$useState4[1];\n\n  const _React$useState5 = React.useState(false),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        success = _React$useState6[0],\n        setSuccess = _React$useState6[1];\n\n  const timer = React.useRef();\n  const buttonClassname = clsx({\n    [classes.buttonSuccess]: success\n  });\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timer.current);\n    };\n  }, []);\n\n  function handleButtonClick() {\n    if (!loading) {\n      setSuccess(false);\n      setLoading(true);\n      timer.current = setTimeout(() => {\n        setSuccess(true);\n        setLoading(false);\n      }, 2000);\n    }\n  }\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"standard-uncontrolled\",\n    label: \"First Name\",\n    defaultValue: \"\",\n    className: classes.textField,\n    margin: \"normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(Fab, {\n    \"aria-label\": \"save\",\n    color: \"primary\",\n    className: buttonClassname,\n    onClick: handleButtonClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, success ? React.createElement(CheckIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }) : React.createElement(SaveIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  })), loading && React.createElement(CircularProgress, {\n    size: 68,\n    className: classes.fabProgress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: classes.wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: buttonClassname,\n    disabled: loading,\n    onClick: handleButtonClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"Accept terms\"), loading && React.createElement(CircularProgress, {\n    size: 24,\n    className: classes.buttonProgress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["E:\\react-app\\src\\App.js"],"names":["React","Fragment","clsx","makeStyles","TextField","CircularProgress","green","Button","Fab","SaveIcon","useStyles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","width","dense","marginTop","menu","root","alignItems","wrapper","margin","position","buttonSuccess","backgroundColor","fabProgress","color","top","left","zIndex","buttonProgress","App","classes","useState","name","age","multiline","currency","values","setValues","handleChange","event","target","value","loading","setLoading","success","setSuccess","timer","useRef","buttonClassname","useEffect","clearTimeout","current","handleButtonClick","setTimeout"],"mappings":"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","sourcesContent":["import React,{Fragment} from 'react';\nimport './App.css';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { green } from '@material-ui/core/colors';\nimport Button from '@material-ui/core/Button';\nimport Fab from '@material-ui/core/Fab';\n// import CheckIcon from '@material-ui/icons/Check';\nimport SaveIcon from '@material-ui/icons/Save';\n\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n  dense: {\n    marginTop: 19,\n  },\n  menu: {\n    width: 200,\n  },\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  wrapper: {\n    margin: theme.spacing(1),\n    position: 'relative',\n  },\n  buttonSuccess: {\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700],\n    },\n  },\n  fabProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: -6,\n    left: -6,\n    zIndex: 1,\n  },\n  buttonProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12,\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    name: 'Cat in the Hat',\n    age: '',\n    multiline: 'Controlled',\n    currency: 'EUR',\n  });\n\n  const handleChange = name => event => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  const [loading, setLoading] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const timer = React.useRef();\n\n  const buttonClassname = clsx({\n    [classes.buttonSuccess]: success,\n  });\n\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timer.current);\n    };\n  }, []);\n\n  function handleButtonClick() {\n    if (!loading) {\n      setSuccess(false);\n      setLoading(true);\n      timer.current = setTimeout(() => {\n        setSuccess(true);\n        setLoading(false);\n      }, 2000);\n    }\n  }\n  return (\n    <Fragment>\n       <TextField\n        id=\"standard-uncontrolled\"\n        label=\"First Name\"\n        defaultValue=\"\"\n        className={classes.textField}\n        margin=\"normal\"\n      />\n  <div className={classes.root}>\n      <div className={classes.wrapper}>\n        <Fab\n          aria-label=\"save\"\n          color=\"primary\"\n          className={buttonClassname}\n          onClick={handleButtonClick}\n        >\n          {success ? <CheckIcon /> : <SaveIcon />}\n        </Fab>\n        {loading && <CircularProgress size={68} className={classes.fabProgress} />}\n      </div>\n      <div className={classes.wrapper}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className={buttonClassname}\n          disabled={loading}\n          onClick={handleButtonClick}\n        >\n          Accept terms\n        </Button>\n        {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n      </div>\n    </div>\n    </Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}