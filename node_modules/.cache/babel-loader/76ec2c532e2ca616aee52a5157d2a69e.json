{"ast":null,"code":"import _defineProperty from \"E:\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"E:\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\react-app\\\\src\\\\App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Fragment } from 'react';\nimport './App.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { green } from '@material-ui/core/colors';\nimport Button from '@material-ui/core/Button';\nimport Fab from '@material-ui/core/Fab';\nimport CheckIcon from '@material-ui/icons/Check';\nimport SaveIcon from '@material-ui/icons/Save';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  wrapper: {\n    margin: theme.spacing(1),\n    position: 'relative'\n  },\n  buttonSuccess: {\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700]\n    }\n  },\n  fabProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: -6,\n    left: -6,\n    zIndex: 1\n  },\n  buttonProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12\n  }\n}));\n\nfunction App() {\n  const classes = useStyles();\n\n  const _React$useState = React.useState({\n    name: 'Cat in the Hat',\n    age: '',\n    multiline: 'Controlled',\n    currency: 'EUR'\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        values = _React$useState2[0],\n        setValues = _React$useState2[1];\n\n  const handleChange = name => event => {\n    setValues(_objectSpread({}, values, {\n      [name]: event.target.value\n    }));\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"standard-uncontrolled\",\n    label: \"First Name\",\n    defaultValue: \"\",\n    className: classes.textField,\n    margin: \"normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["E:\\react-app\\src\\App.js"],"names":["React","Fragment","makeStyles","CircularProgress","green","Button","Fab","CheckIcon","SaveIcon","useStyles","theme","root","display","alignItems","wrapper","margin","spacing","position","buttonSuccess","backgroundColor","fabProgress","color","top","left","zIndex","buttonProgress","marginTop","marginLeft","App","classes","useState","name","age","multiline","currency","values","setValues","handleChange","event","target","value","textField"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAO,WAAP;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,SAASC,KAAT,QAAsB,0BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AAGA,MAAMC,SAAS,GAAGP,UAAU,CAACQ,KAAK,KAAK;AACrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,UAAU,EAAE;AAFR,GAD+B;AAKrCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,MAAM,EAAEL,KAAK,CAACM,OAAN,CAAc,CAAd,CADD;AAEPC,IAAAA,QAAQ,EAAE;AAFH,GAL4B;AASrCC,EAAAA,aAAa,EAAE;AACbC,IAAAA,eAAe,EAAEf,KAAK,CAAC,GAAD,CADT;AAEb,eAAW;AACTe,MAAAA,eAAe,EAAEf,KAAK,CAAC,GAAD;AADb;AAFE,GATsB;AAerCgB,EAAAA,WAAW,EAAE;AACXC,IAAAA,KAAK,EAAEjB,KAAK,CAAC,GAAD,CADD;AAEXa,IAAAA,QAAQ,EAAE,UAFC;AAGXK,IAAAA,GAAG,EAAE,CAAC,CAHK;AAIXC,IAAAA,IAAI,EAAE,CAAC,CAJI;AAKXC,IAAAA,MAAM,EAAE;AALG,GAfwB;AAsBrCC,EAAAA,cAAc,EAAE;AACdJ,IAAAA,KAAK,EAAEjB,KAAK,CAAC,GAAD,CADE;AAEda,IAAAA,QAAQ,EAAE,UAFI;AAGdK,IAAAA,GAAG,EAAE,KAHS;AAIdC,IAAAA,IAAI,EAAE,KAJQ;AAKdG,IAAAA,SAAS,EAAE,CAAC,EALE;AAMdC,IAAAA,UAAU,EAAE,CAAC;AANC;AAtBqB,CAAL,CAAN,CAA5B;;AAgCA,SAASC,GAAT,GAAe;AACb,QAAMC,OAAO,GAAGpB,SAAS,EAAzB;;AADa,0BAEeT,KAAK,CAAC8B,QAAN,CAAe;AACzCC,IAAAA,IAAI,EAAE,gBADmC;AAEzCC,IAAAA,GAAG,EAAE,EAFoC;AAGzCC,IAAAA,SAAS,EAAE,YAH8B;AAIzCC,IAAAA,QAAQ,EAAE;AAJ+B,GAAf,CAFf;AAAA;AAAA,QAENC,MAFM;AAAA,QAEEC,SAFF;;AASb,QAAMC,YAAY,GAAGN,IAAI,IAAIO,KAAK,IAAI;AACpCF,IAAAA,SAAS,mBAAMD,MAAN;AAAc,OAACJ,IAAD,GAAQO,KAAK,CAACC,MAAN,CAAaC;AAAnC,OAAT;AACD,GAFD;;AAGA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,SAAD;AACC,IAAA,EAAE,EAAC,uBADJ;AAEC,IAAA,KAAK,EAAC,YAFP;AAGC,IAAA,YAAY,EAAC,EAHd;AAIC,IAAA,SAAS,EAAEX,OAAO,CAACY,SAJpB;AAKC,IAAA,MAAM,EAAC,QALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADF;AAWD;;AAED,eAAeb,GAAf","sourcesContent":["import React,{Fragment} from 'react';\nimport './App.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { green } from '@material-ui/core/colors';\nimport Button from '@material-ui/core/Button';\nimport Fab from '@material-ui/core/Fab';\nimport CheckIcon from '@material-ui/icons/Check';\nimport SaveIcon from '@material-ui/icons/Save';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  wrapper: {\n    margin: theme.spacing(1),\n    position: 'relative',\n  },\n  buttonSuccess: {\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700],\n    },\n  },\n  fabProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: -6,\n    left: -6,\n    zIndex: 1,\n  },\n  buttonProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12,\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    name: 'Cat in the Hat',\n    age: '',\n    multiline: 'Controlled',\n    currency: 'EUR',\n  });\n\n  const handleChange = name => event => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n  return (\n    <Fragment>\n       <TextField\n        id=\"standard-uncontrolled\"\n        label=\"First Name\"\n        defaultValue=\"\"\n        className={classes.textField}\n        margin=\"normal\"\n      />\n    </Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}